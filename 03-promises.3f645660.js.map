{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAQC,SAASC,cAAc,QAC/BC,EAAaH,EAAME,cAAc,kBACjCE,EAAYJ,EAAME,cAAc,iBAChCG,EAAcL,EAAME,cAAc,mBAKxC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,uBAAqBN,QAAiBC,OAG9CM,EAAO,sBAAoBP,QAAeC,SAE3CA,MAdPR,EAAMgB,iBAAiB,UAkBvB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAYC,OAAOjB,EAAWkB,OAClC,MAAMC,EAAWF,OAAOhB,EAAUiB,OAC5BE,EAAeH,OAAOf,EAAYgB,OAExC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtClB,EAAckB,EAAGL,GACdM,MAAKC,GAAQ5B,EAAA6B,OAAOC,QAAQF,KAC5BG,OAAMH,GAAQ5B,EAAA6B,OAAOG,QAAQJ,KAEhCP,GAAaG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Notify.success('Sol lucet omnibus');\n// Notify.failure('Qui timide rogat docet negare');\n\nconst form1 = document.querySelector('form');\nconst delayInput = form1.querySelector('[name=\"delay\"]');\nconst delayStep = form1.querySelector('[name=\"step\"]');\nconst delayAmount = form1.querySelector('[name=\"amount\"]');\n\nform1.addEventListener('submit', onSubmitForm);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n} \n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  let delayTime = Number(delayInput.value);\n  const stepTime = Number(delayStep.value);\n  const amountNumber = Number(delayAmount.value);\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, delayTime)\n      .then(data => Notify.success(data))\n      .catch(data => Notify.failure(data));\n    \n    delayTime += stepTime;\n  };\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form1","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$delayAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayTime","Number","value","stepTime","amountNumber","i","then","data","Notify","success","catch","failure"],"version":3,"file":"03-promises.3f645660.js.map"}